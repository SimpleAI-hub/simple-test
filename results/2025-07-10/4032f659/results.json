{
  "contractHash": "4032f659",
  "executionResults": {
    "success": false,
    "error": "Command failed: npx hardhat test 2>&1\n",
    "stdout": "\n\n  FLOG\n    Deployment\n      ✔ Should set the right owner\n      ✔ Should have correct totalSupply\n      ✔ Should have correct name and symbol\n      ✔ Should have correct initial balances\n    Function Tests\n      1) Should transfer tokens correctly\n      2) Should approve spender correctly\n      3) Should transferFrom tokens correctly\n      4) Should emit Transfer event\n      5) Should emit Approval event\n    Edge Cases\n      ✔ Should revert transfer with zero amount\n      6) Should revert transfer to zero address\n      7) Should revert transferFrom with insufficient allowance\n      8) Should revert transferFrom with zero address\n      9) Should revert if trying to enable trading twice\n      10) Should revert reduceFee with invalid percentage\n      11) Should revert if transfer exceeds maxTxAmount\n      12) Should revert if transfer exceeds maxWalletSize\n    Ownership and Security\n      13) Should allow owner to renounceOwnership\n      ✔ Should prevent non-owner from calling onlyOwner functions\n      ✔ Should allow owner to add and remove bots\n      ✔ Should prevent non-owner from adding and removing bots\n      14) Should allow manual swap and send by taxWallet\n      ✔ Should prevent non-taxWallet from calling manualSwap and manualsend\n\n\n  9 passing (1s)\n  14 failing\n\n  1) FLOG\n       Function Tests\n         Should transfer tokens correctly:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:37:43)\n\n  2) FLOG\n       Function Tests\n         Should approve spender correctly:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:42:42)\n\n  3) FLOG\n       Function Tests\n         Should transferFrom tokens correctly:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:47:43)\n\n  4) FLOG\n       Function Tests\n         Should emit Transfer event:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:53:43)\n\n  5) FLOG\n       Function Tests\n         Should emit Approval event:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:59:42)\n\n  6) FLOG\n       Edge Cases\n         Should revert transfer to zero address:\n     TypeError: Cannot read properties of undefined (reading 'AddressZero')\n      at Context.<anonymous> (test/Context.test.js:72:57)\n      at processImmediate (node:internal/timers:483:21)\n\n  7) FLOG\n       Edge Cases\n         Should revert transferFrom with insufficient allowance:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:75:43)\n\n  8) FLOG\n       Edge Cases\n         Should revert transferFrom with zero address:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:80:43)\n\n  9) FLOG\n       Edge Cases\n         Should revert if trying to enable trading twice:\n     Error: Transaction reverted: function returned an unexpected amount of data\n    at FLOG.enableTrading (contracts/Context.sol:314)\n    at EdrProviderWrapper.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:359:41)\n    at HardhatEthersSigner.sendTransaction (node_modules/@nomicfoundation/hardhat-ethers/src/signers.ts:181:18)\n    at send (node_modules/ethers/src.ts/contract/contract.ts:313:20)\n    at Proxy.enableTrading (node_modules/ethers/src.ts/contract/contract.ts:352:16)\n    at Context.<anonymous> (test/Context.test.js:85:13)\n  \n\n  10) FLOG\n       Edge Cases\n         Should revert reduceFee with invalid percentage:\n     AssertionError: Expected transaction to be reverted with reason 'Percentage cannot exceed 100', but it didn't revert\n      at Context.<anonymous> (test/Context.test.js:89:13)\n\n  11) FLOG\n       Edge Cases\n         Should revert if transfer exceeds maxTxAmount:\n     AssertionError: Expected transaction to be reverted with reason 'Exceeds the _maxTxAmount.', but it didn't revert\n      at Context.<anonymous> (test/Context.test.js:93:13)\n\n  12) FLOG\n       Edge Cases\n         Should revert if transfer exceeds maxWalletSize:\n     AssertionError: Expected transaction to be reverted with reason 'Exceeds the maxWalletSize.', but it didn't revert\n      at Context.<anonymous> (test/Context.test.js:98:11)\n\n  13) FLOG\n       Ownership and Security\n         Should allow owner to renounceOwnership:\n     TypeError: Cannot read properties of undefined (reading 'AddressZero')\n      at Context.<anonymous> (test/Context.test.js:105:127)\n      at processImmediate (node:internal/timers:483:21)\n\n  14) FLOG\n       Ownership and Security\n         Should allow manual swap and send by taxWallet:\n     TypeError: invalid unit (argument=\"unit\", value=\"18\", code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at Proxy.parseUnits (node_modules/ethers/src.ts/utils/units.ts:69:23)\n      at Context.<anonymous> (test/Context.test.js:124:41)\n\n\n\n",
    "stderr": "",
    "executionTime": "20.87s",
    "testsPassed": {
      "passed": 0,
      "failed": 0,
      "individual": []
    },
    "gasUsage": null
  },
  "metadata": {
    "model": "Simple AI V1.0.4",
    "tokensUsed": 0,
    "generatedAt": "2025-07-10T04:00:14.381Z",
    "totalExecutionTime": "36.90s",
    "hardhatVersion": "2.22.0",
    "compiler": "solc 0.8.19"
  },
  "timestamp": "2025-07-10T04:00:36.388Z"
}