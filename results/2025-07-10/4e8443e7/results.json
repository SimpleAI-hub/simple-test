{
  "contractHash": "4e8443e7",
  "executionResults": {
    "success": true,
    "output": "\n\n  SimpleAIToken\n    Deployment\n      1) Should set the right owner\n      ✔ Should deploy with correct max supply\n      ✔ Should deploy with correct initial tax rate\n      2) Should deploy with correct initial tax wallet\n      ✔ Should exclude owner and contract from tax\n    Function Tests\n      3) Should transfer with tax deduction\n      4) Should transfer without tax for excluded address\n      5) Should transfer using transferFrom\n      ✔ Should update tax rate\n      6) Should update tax wallet\n      ✔ Should exclude and include address from tax\n      ✔ Should burn tokens\n    Edge Cases\n      ✔ Should revert if tax rate is too high\n      ✔ Should revert if tax wallet is invalid\n      ✔ Should revert if trying to transfer more tokens than balance\n      ✔ Should revert if trying to burn more tokens than balance\n      ✔ Should revert if trying to transferFrom without approval\n      7) Should revert if trying to transferFrom exceeding allowance\n      ✔ Should handle zero transfer amount\n    Gas Usage\nGas used for transfer: 53773\n      ✔ Should test gas usage for transfer\nGas used for transferFrom: 56817\n      ✔ Should test gas usage for transferFrom\n\n\n  14 passing (851ms)\n  7 failing\n\n  1) SimpleAIToken\n       Deployment\n         Should set the right owner:\n     AssertionError: expected '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb…' to equal Promise{…}\n      at Context.<anonymous> (test/SimpleAIToken.test.js:20:52)\n\n  2) SimpleAIToken\n       Deployment\n         Should deploy with correct initial tax wallet:\n     AssertionError: expected '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb…' to equal Promise{…}\n      at Context.<anonymous> (test/SimpleAIToken.test.js:32:56)\n\n  3) SimpleAIToken\n       Function Tests\n         Should transfer with tax deduction:\n     TypeError: Cannot mix BigInt and other types, use explicit conversions\n      at Context.<anonymous> (test/SimpleAIToken.test.js:46:53)\n\n  4) SimpleAIToken\n       Function Tests\n         Should transfer without tax for excluded address:\n     TypeError: Cannot read properties of undefined (reading 'find')\n      at Context.<anonymous> (test/SimpleAIToken.test.js:60:35)\n\n  5) SimpleAIToken\n       Function Tests\n         Should transfer using transferFrom:\n     TypeError: Cannot mix BigInt and other types, use explicit conversions\n      at Context.<anonymous> (test/SimpleAIToken.test.js:69:53)\n\n  6) SimpleAIToken\n       Function Tests\n         Should update tax wallet:\n     AssertionError: expected '0x70997970C51812dc3A010C7d01b50e0d17d…' to equal Promise{…}\n      at Context.<anonymous> (test/SimpleAIToken.test.js:86:56)\n\n  7) SimpleAIToken\n       Edge Cases\n         Should revert if trying to transferFrom exceeding allowance:\n     TypeError: Cannot mix BigInt and other types, use explicit conversions\n      at Context.<anonymous> (test/SimpleAIToken.test.js:130:68)\n      at processImmediate (node:internal/timers:483:21)\n\n\n\n",
    "executionTime": "50.59s",
    "testsPassed": {
      "passed": 14,
      "failed": 7,
      "individual": [
        {
          "name": "Should set the right owner",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should deploy with correct max supply",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should deploy with correct initial tax rate",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should deploy with correct initial tax wallet",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should exclude owner and contract from tax",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should transfer with tax deduction",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should transfer without tax for excluded address",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should transfer using transferFrom",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should update tax rate",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should update tax wallet",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should exclude and include address from tax",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should burn tokens",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if tax rate is too high",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if tax wallet is invalid",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if trying to transfer more tokens than balance",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if trying to burn more tokens than balance",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if trying to transferFrom without approval",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if trying to transferFrom exceeding allowance",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should handle zero transfer amount",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should test gas usage for transfer",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should test gas usage for transferFrom",
          "passed": true,
          "describe": "SimpleAIToken"
        }
      ]
    },
    "gasUsage": null
  },
  "metadata": {
    "model": "Simple AI V1.0.4",
    "tokensUsed": 0,
    "generatedAt": "2025-07-10T04:39:40.095Z",
    "totalExecutionTime": "64.85s",
    "hardhatVersion": "2.22.0",
    "compiler": "solc 0.8.19"
  },
  "timestamp": "2025-07-10T04:40:31.398Z"
}