/*
 * Solidity Contract
 * Generated by Simple Test - AI-Powered Solidity Testing
 * 
 * Contract Hash: unknown
 * Generated At: 2025-07-10T03:26:01.715Z
 * AI Model: gemini-1.5-flash
 * Execution Time: 56.48s
 * 
 * ðŸ¤– This file was automatically generated
 * ðŸ”— Visit https://test.smplai.io to generate your own tests
 */

// SPDX-License-Identifier: MIT
  pragma solidity ^0.8.0;

  contract SimpleStorage {
      uint256 public storedNumber;
      address public owner;

      event NumberChanged(uint256 oldValue, uint256 newValue);

      constructor() {
          owner = msg.sender;
          storedNumber = 42; // Changed from 42
      }

      function setNumber(uint256 _number) public {
          require(msg.sender == owner, "Only owner can set number");
          uint256 oldValue = storedNumber;
          storedNumber = _number;
          emit NumberChanged(oldValue, _number);
      }

      function getNumber() public view returns (uint256) {
          return storedNumber;
      }

      function doubleNumber() public {
          require(msg.sender == owner, "Only owner can double");
          storedNumber = storedNumber * 2;
      }

      // Added a comment to change hash
//v4
  }