{
  "contractHash": "a8cb7d99",
  "executionResults": {
    "success": true,
    "output": "\n\n  SimpleAIToken\n    Deployment\n      ✔ Should deploy contract successfully\n      ✔ Should set correct initial tax rate\n      ✔ Should set correct initial tax wallet\n      ✔ Should mint max supply to owner\n      ✔ Should exclude owner and contract from tax\n    Function Tests\n      1) Should set tax rate successfully\n      2) Should set tax wallet successfully\n      ✔ Should exclude and include addresses from tax successfully\n      3) Should transfer with tax deduction\n      4) Should transfer without tax for excluded address\n      5) Should transfer using transferFrom\n      6) Should burn tokens successfully\n    Edge Cases\n      ✔ Should revert if setting tax rate too high\n      ✔ Should revert if setting tax wallet to zero address\n      ✔ Should revert if transferring more tokens than balance\n      ✔ Should revert if burning more tokens than balance\n      ✔ Should revert if transferring from an address with insufficient balance\n    Gas Usage Tests\nGas used for transfer: 53773\n      ✔ Should test gas usage for transfer\nGas used for burn: 33713\n      ✔ Should test gas usage for burn\n\n\n  13 passing (796ms)\n  6 failing\n\n  1) SimpleAIToken\n       Function Tests\n         Should set tax rate successfully:\n     TypeError: Cannot read properties of undefined (reading '0')\n      at Context.<anonymous> (test/SimpleAIToken.test.js:46:28)\n\n  2) SimpleAIToken\n       Function Tests\n         Should set tax wallet successfully:\n     TypeError: Cannot read properties of undefined (reading '0')\n      at Context.<anonymous> (test/SimpleAIToken.test.js:55:28)\n\n  3) SimpleAIToken\n       Function Tests\n         Should transfer with tax deduction:\n     TypeError: amount.mul is not a function\n      at Context.<anonymous> (test/SimpleAIToken.test.js:71:106)\n\n  4) SimpleAIToken\n       Function Tests\n         Should transfer without tax for excluded address:\n\n      AssertionError: expected 999900000000000000000000 to equal 0.\n      + expected - actual\n\n      -999900000000000000000000\n      +0\n      \n      at Context.<anonymous> (test/SimpleAIToken.test.js:80:71)\n\n  5) SimpleAIToken\n       Function Tests\n         Should transfer using transferFrom:\n     Error: VM Exception while processing transaction: reverted with reason string 'ERC20: insufficient allowance'\n    at SimpleAIToken.decreaseAllowance (@openzeppelin/contracts/token/ERC20/ERC20.sol:200)\n    at SimpleAIToken.transferFrom (@openzeppelin/contracts/token/ERC20/ERC20.sol:160)\n    at EdrProviderWrapper.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:359:41)\n    at HardhatEthersSigner.sendTransaction (node_modules/@nomicfoundation/hardhat-ethers/src/signers.ts:181:18)\n    at send (node_modules/ethers/src.ts/contract/contract.ts:313:20)\n    at Proxy.transferFrom (node_modules/ethers/src.ts/contract/contract.ts:352:16)\n    at Context.<anonymous> (test/SimpleAIToken.test.js:86:7)\n  \n\n  6) SimpleAIToken\n       Function Tests\n         Should burn tokens successfully:\n     TypeError: ethers.parseUnits(...).sub is not a function\n      at Context.<anonymous> (test/SimpleAIToken.test.js:93:97)\n\n\n\n",
    "executionTime": "15.11s",
    "testsPassed": {
      "passed": 13,
      "failed": 6,
      "individual": [
        {
          "name": "Should deploy contract successfully",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should set correct initial tax rate",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should set correct initial tax wallet",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should mint max supply to owner",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should exclude owner and contract from tax",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should set tax rate successfully",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should set tax wallet successfully",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should exclude and include addresses from tax successfully",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should transfer with tax deduction",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should transfer without tax for excluded address",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should transfer using transferFrom",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should burn tokens successfully",
          "passed": false,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if setting tax rate too high",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if setting tax wallet to zero address",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if transferring more tokens than balance",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if burning more tokens than balance",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should revert if transferring from an address with insufficient balance",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should test gas usage for transfer",
          "passed": true,
          "describe": "SimpleAIToken"
        },
        {
          "name": "Should test gas usage for burn",
          "passed": true,
          "describe": "SimpleAIToken"
        }
      ]
    },
    "gasUsage": null
  },
  "metadata": {
    "model": "Simple AI V1.0.4",
    "tokensUsed": 0,
    "generatedAt": "2025-07-10T04:30:25.157Z",
    "totalExecutionTime": "26.91s",
    "hardhatVersion": "2.22.0",
    "compiler": "solc 0.8.19"
  },
  "timestamp": "2025-07-10T04:30:40.967Z"
}