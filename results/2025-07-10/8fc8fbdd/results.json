{
  "contractHash": "8fc8fbdd",
  "executionResults": {
    "success": true,
    "output": "\n\n  FLOG\n    Deployment\n      ✔ Should set the right owner\n      1) Should have correct initial balances\n    Function Tests\n      2) \"before each\" hook for \"Should transfer tokens correctly\"\n    Edge Cases\n      ✔ Should revert if transfer amount exceeds balance\n      ✔ Should revert if transfer amount is zero\n      ✔ Should revert if transfer to zero address\n      3) Should revert if approve from zero address\n      4) Should revert if approve to zero address\n      5) Should revert if transferFrom amount exceeds allowance\n      6) Should revert if exceeds maxTxAmount\n      7) Should revert if exceeds maxWalletSize\n      ✔ Should revert if only owner can call onlyOwner functions\n\n\n  5 passing (697ms)\n  7 failing\n\n  1) FLOG\n       Deployment\n         Should have correct initial balances:\n     TypeError: overflow (argument=\"value\", value=4.2069e+29, code=INVALID_ARGUMENT, version=6.15.0)\n      at makeError (node_modules/ethers/src.ts/utils/errors.ts:691:21)\n      at assert (node_modules/ethers/src.ts/utils/errors.ts:719:25)\n      at assertArgument (node_modules/ethers/src.ts/utils/errors.ts:731:5)\n      at getBigInt (node_modules/ethers/src.ts/utils/maths.ts:100:27)\n      at Proxy.toBigInt (node_modules/ethers/src.ts/utils/maths.ts:144:12)\n      at Context.<anonymous> (test/Context.test.js:26:34)\n\n  2) FLOG\n       Function Tests\n         \"before each\" hook for \"Should transfer tokens correctly\":\n     Error: Transaction reverted: function returned an unexpected amount of data\n    at FLOG.enableTrading (contracts/Context.sol:314)\n    at EdrProviderWrapper.request (node_modules/hardhat/src/internal/hardhat-network/provider/provider.ts:359:41)\n    at HardhatEthersSigner.sendTransaction (node_modules/@nomicfoundation/hardhat-ethers/src/signers.ts:181:18)\n    at send (node_modules/ethers/src.ts/contract/contract.ts:313:20)\n    at Proxy.enableTrading (node_modules/ethers/src.ts/contract/contract.ts:352:16)\n    at Context.<anonymous> (test/Context.test.js:33:7)\n  \n\n  3) FLOG\n       Edge Cases\n         Should revert if approve from zero address:\n     AssertionError: Expected transaction to be reverted with reason 'ERC20: approve from the zero address', but it reverted with reason 'ERC20: approve to the zero address'\n      at Context.<anonymous> (test/Context.test.js:104:9)\n\n  4) FLOG\n       Edge Cases\n         Should revert if approve to zero address:\n     AssertionError: Expected transaction to be reverted with reason 'ERC20: approve to the zero address', but it didn't revert\n      at Context.<anonymous> (test/Context.test.js:109:9)\n\n  5) FLOG\n       Edge Cases\n         Should revert if transferFrom amount exceeds allowance:\n     TypeError: amount.div is not a function\n      at Context.<anonymous> (test/Context.test.js:114:50)\n      at processImmediate (node:internal/timers:483:21)\n\n  6) FLOG\n       Edge Cases\n         Should revert if exceeds maxTxAmount:\n     AssertionError: Expected transaction to be reverted with reason 'Exceeds the _maxTxAmount.', but it didn't revert\n      at Context.<anonymous> (test/Context.test.js:120:9)\n\n  7) FLOG\n       Edge Cases\n         Should revert if exceeds maxWalletSize:\n     AssertionError: Expected transaction to be reverted with reason 'Exceeds the maxWalletSize.', but it didn't revert\n      at Context.<anonymous> (test/Context.test.js:125:9)\n\n\n\n",
    "executionTime": "12.96s",
    "testsPassed": {
      "passed": 5,
      "failed": 7,
      "individual": [
        {
          "name": "Should set the right owner",
          "passed": true,
          "describe": "FLOG"
        },
        {
          "name": "Should have correct initial balances",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "\"before each\" hook for \"Should transfer tokens correctly\"",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if transfer amount exceeds balance",
          "passed": true,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if transfer amount is zero",
          "passed": true,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if transfer to zero address",
          "passed": true,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if approve from zero address",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if approve to zero address",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if transferFrom amount exceeds allowance",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if exceeds maxTxAmount",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if exceeds maxWalletSize",
          "passed": false,
          "describe": "FLOG"
        },
        {
          "name": "Should revert if only owner can call onlyOwner functions",
          "passed": true,
          "describe": "FLOG"
        }
      ]
    },
    "gasUsage": null
  },
  "metadata": {
    "model": "Simple AI V1.0.4",
    "tokensUsed": 0,
    "generatedAt": "2025-07-10T04:07:54.213Z",
    "totalExecutionTime": "30.24s",
    "hardhatVersion": "2.22.0",
    "compiler": "solc 0.8.19"
  },
  "timestamp": "2025-07-10T04:08:07.882Z"
}