/*
 * Solidity Contract
 * Generated by Simple Test - AI-Powered Solidity Testing
 * 
 * Contract Hash: unknown
 * Generated At: 2025-07-09T20:41:32.536Z
 * AI Model: gemini-1.5-flash
 * Execution Time: 38.83s
 * 
 * ðŸ¤– This file was automatically generated
 * ðŸ”— Visit https://test.smplai.io to generate your own tests
 */

pragma solidity ^0.8.0;

  contract Wallet {
      mapping(address => uint256) public balances;
      address public owner;
      uint256 public totalDeposits;

      constructor() {
          owner = msg.sender;
      }

      function deposit() public payable {
          require(msg.value > 0, "Must deposit more than 0");
          balances[msg.sender] += msg.value;
          totalDeposits += msg.value;
      }

      function withdraw(uint256 amount) public {
          require(balances[msg.sender] >= amount, "Insufficient balance");
          balances[msg.sender] -= amount;
          payable(msg.sender).transfer(amount);
      }

      function getBalance() public view returns (uint256) {
          return balances[msg.sender];
      }

      function emergencyWithdraw() public {
          require(msg.sender == owner, "Only owner can emergency withdraw");
          payable(owner).transfer(address(this).balance);
      }
  }